<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mac配置vscode进行C++开发]]></title>
    <url>%2F2018%2F12%2F22%2FMac%E9%85%8D%E7%BD%AEvscode%E8%BF%9B%E8%A1%8CC-%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[#前言 平时工作做C/C++方面的开发更多还是在Windows下使用Visual Studio，Qt，CodeBlock等。自己的电脑是macOS下使用过IDE性质的XCode,CLion,Qt Creator，也使用过轻量级的诸如TextMate, Sublime Text，vim。但始终没有宇宙最强IDE—MS家族的VS。那种操作体验爽。废话少说了，直接上教程 需求格式化自动补全Lint符号检索方便的跳转和查看可视化调试 步骤1.下载并安装Visual Studio Code2.检查自己的Mac是否安装了编译器，打开控制台。输入 g++ -v 和 clang++ -v如下图3.然后回到VSCode去安装如下图所示的两款插件，以获得C++语法高亮、错误检查和调试等功能。 那么，前期准备工作完成后进入具体的配置阶段。首先在目录下新建一个文件夹作为工程目录，然后在VSCode中打开该文件夹。在里面新建一个cpp文件命名为main.cpp。随意写点程序在里面。 12345678910#include&lt;iostream&gt;#include&lt;stdlib.h&gt;#include&lt;stdio.h&gt;using namespace std;int main(int argc, char const *argv[])&#123; cout&lt;&lt;&quot;Hello~&quot;&lt;&lt;endl; return 0;&#125; 然后点击侧边栏的Debug按钮，点击设置图标，便会提示你选择环境，这里就选择C++那一项。 此时VSCode会在你的工程目录下自动新建一个.vscode的文件夹，并新建了一个launch.json的文件，这里需要对生成的文件进行一些小改动。本人配置如下： 1234567891011121314151617181920&#123; // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;(lldb) Launch&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/a.out&quot;, &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: true, &quot;MIMode&quot;: &quot;lldb&quot; &#125; ]&#125; 保存后按快捷键⇧⌘B编译，此时会出现提示没有找到要运行的生成任务，所以接下来将进行生成任务的配置工作，VSCode提供了一些模版，有需要的可以自行选择，这里就选则Others。 此时.vscode目录下会出现一个task.json文件，对它进行改写。本人配置如下： 12345678910111213141516171819&#123; // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ &#123; &quot;label&quot;: &quot;hello world&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;clang++&quot;, &quot;args&quot;: [ &quot;main.cpp&quot; ], &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125; &#125; ]&#125; 保存后再次按快捷键⇧⌘B就能够顺利编译了，编译完成后按F5执行，得到输出结果。 每次编译完成后，我们会发现目录下多了一个a.out文件，这个文件是Linux/Unix环境下编译器编译源代码并连接产生的可执行文件，在未指定的情况下其默认命名为a.out。那么如何通过修改配置文件来修改这个文件的命名呢？ 方法很简单，在task.json中的args属性下填入-o yourfilename.out，以本人的配置作为示例： 1234567891011121314151617181920&#123; // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ &#123; &quot;label&quot;: &quot;hello world&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;clang++&quot;, &quot;args&quot;: [ &quot;-o app.out&quot;, &quot;main.cpp&quot; ], &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125; &#125; ]&#125; 可以发现这里的command和args两个属性就相当于在命令行中执行了clang++ -o yourfilename.out main.cpp，所以如果还有其他的需求也可以对这里进行改写。最后不要忘记修改launch.json中的program属性，将.out的文件名修改为与task.json一致。便可以成功编译执行了。编译后结果如下图：]]></content>
      <categories>
        <category>编程工具</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[如何关联结构体中的各个变量]]></title>
    <url>%2F2018%2F11%2F09%2F%E5%A6%82%E4%BD%95%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%AD%E7%9A%84%E5%90%84%E4%B8%AA%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[日常查询一个结构体里面的变量，一般都是直接拿着结构体往控件填写相应的参数即可，但是实际应用中涉及到查询等操作时，需要根据某个名称获取其他的信息比如，它的相关说明等等。 思路：ID和Name 这两变量本身没有任何关联，需要用一种关联容器实现二者关联。即QMap 本文关键字：QListView; QStringList; QMap; 信号和槽 mainwindow.cpp 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#include &quot;mainwindow.h&quot;#include &quot;ui_mainwindow.h&quot;#include &lt;QMessageBox&gt;#include &lt;QDebug&gt;#include &lt;QString&gt;#include &lt;QMap&gt;MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow)&#123; ui-&gt;setupUi(this); init();&#125;MainWindow::~MainWindow()&#123; delete ui; &#125;void MainWindow::init() &#123; m1_sAreaInfo = &#123;&quot;0x1&quot;,&quot;名称4&quot;,&quot;防区安全&quot;&#125;; m2_sAreaInfo = &#123;&quot;0x2&quot;,&quot;名称5&quot;,&quot;防区未知&quot;&#125;; m3_sAreaInfo = &#123;&quot;0x3&quot;,&quot;名称6&quot;,&quot;防区安全&quot;&#125;;ItemModel = new QStandardItemModel(this);QStringList strList;strList.append(QString::fromStdString(m1_sAreaInfo.ID));strList.append(QString::fromStdString(m2_sAreaInfo.ID));strList.append(QString::fromStdString(m3_sAreaInfo.ID));map.insert(&quot;0x1&quot;,&quot;名称4&quot;);map.insert(&quot;0x2&quot;,&quot;名称5&quot;);map.insert(&quot;0x3&quot;,&quot;名称6&quot;);int nCount = strList.size();for(int i = 0; i &lt; nCount; i++)&#123; QString string = static_cast&lt;QString&gt;(strList.at(i)); QStandardItem *item = new QStandardItem(string); ItemModel-&gt;appendRow(item);&#125;ui-&gt;listView-&gt;setModel(ItemModel);ui-&gt;listView-&gt;setFixedSize(200,300);connect(ui-&gt;listView,SIGNAL(clicked( QModelIndex )),this,SLOT(showClick(QModelIndex)));&#125;void MainWindow::showClick( QModelIndex index)&#123;QString strTemp;strTemp = index.data().toString();QMap&lt;QString, QString&gt;::iterator mi; // mi = map.find(strTemp);QString strName = map[strTemp]; //获取键的值QMessageBox msg;msg.setText(strName);msg.exec();&#125; mainwindow.h 123456789101112131415161718192021222324252627282930313233343536373839404142434445#ifndef MAINWINDOW_H#define MAINWINDOW_H#include &lt;QMainWindow&gt;#include &lt;QStringListModel&gt;#include &lt;QStandardItemModel&gt;#include &lt;QModelIndex&gt;namespace Ui &#123;class MainWindow;&#125;class MainWindow : public QMainWindow&#123; Q_OBJECTpublic: explicit MainWindow(QWidget *parent = 0); ~MainWindow();private: Ui::MainWindow *ui;public: QStringListModel *Model; QStandardItemModel *ItemModel; void init(); struct sAreaInfo &#123; std::string ID ; //ID std::string Name ; //名称 std::string Remark; //说明 &#125;; sAreaInfo m1_sAreaInfo; sAreaInfo m2_sAreaInfo; sAreaInfo m3_sAreaInfo; QMap&lt;QString, QString&gt; map;private slots: // void showClick(QModelIndex sAreaInfo); void showClick(QModelIndex);&#125;;#endif // MAINWINDOW_H main.cpp 1234567891011#include &quot;mainwindow.h&quot;#include &lt;QApplication&gt;int main(int argc, char *argv[])&#123; QApplication a(argc, argv); MainWindow w; w.show(); return a.exec();&#125; 打开Qt Creator，拖放一个QListView运行效果以上demo仅供参考]]></content>
      <categories>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>编程语言，C++，C，Qt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蔡佩軒 Ariel Tsai Cover【TOP COVER SONGS 2018】 最佳翻唱 - 最佳歌曲名单]]></title>
    <url>%2F2018%2F11%2F03%2F%E8%94%A1%E4%BD%A9%E8%BB%92-Ariel-Tsai-Cover%E3%80%90TOP-COVER-SONGS-2018%E3%80%91-%E6%9C%80%E5%A5%BD%E5%90%AC%E6%AD%8C-%E6%9C%80%E4%BD%B3%E6%AD%8C%E6%9B%B2%E5%90%8D%E5%8D%95%2F</url>
    <content type="text"><![CDATA[蔡佩軒 Ariel Tsai -That Girl-.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-DtqnOyOK"), narrow: false, autoplay: false, showlrc: false, music: { title: "that gril", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-That%20Girl-.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -体面.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-VfoGhVhO"), narrow: false, autoplay: false, showlrc: false, music: { title: "体面", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E4%BD%93%E9%9D%A2.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -光年之外.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-yLUykAyE"), narrow: false, autoplay: false, showlrc: false, music: { title: "光年之外", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E5%85%89%E5%B9%B4%E4%B9%8B%E5%A4%96.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -剛好遇見你.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-nFwcCgem"), narrow: false, autoplay: false, showlrc: false, music: { title: "刚好遇见你", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E5%89%9B%E5%A5%BD%E9%81%87%E8%A6%8B%E4%BD%A0.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -告白氣球 .mp3 var ap = new APlayer({ element: document.getElementById("aplayer-dbmZaDvh"), narrow: false, autoplay: false, showlrc: false, music: { title: "告白气球", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E5%91%8A%E7%99%BD%E6%B0%A3%E7%90%83.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -妮妮.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-hTTeRiwi"), narrow: false, autoplay: false, showlrc: false, music: { title: "妮妮", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E5%A6%AE%E5%A6%AE.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -漂向北方.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-spCEYDyG"), narrow: false, autoplay: false, showlrc: false, music: { title: "漂向北方", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E6%BC%82%E5%90%91%E5%8C%97%E6%96%B9.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -演員.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-aGxXBKdk"), narrow: false, autoplay: false, showlrc: false, music: { title: "演员", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E6%BC%94%E5%93%A1.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -礼物.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-oTIEGUGn"), narrow: false, autoplay: false, showlrc: false, music: { title: "礼物", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E7%A4%BC%E7%89%A9.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -等你下課.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-rJnZRGoU"), narrow: false, autoplay: false, showlrc: false, music: { title: "等你下课", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E7%AD%89%E4%BD%A0%E4%B8%8B%E8%AA%B2.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -追光者.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-kWUMbUgX"), narrow: false, autoplay: false, showlrc: false, music: { title: "追光者", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E8%BF%BD%E5%85%89%E8%80%85.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai -雪落下的聲音.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-gECFDtcI"), narrow: false, autoplay: false, showlrc: false, music: { title: "雪落下的声音", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai%20-%E9%9B%AA%E8%90%BD%E4%B8%8B%E7%9A%84%E8%81%B2%E9%9F%B3.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒 Ariel Tsai-卡農卡農.mp3 console.error("Error: [hexo-tag-aplayer] Specified asset file not found (href=#蔡佩軒-Ariel-Tsai-宣言-mp3)"); 蔡佩軒 Ariel Tsai-青春有你.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-WwsAXgvX"), narrow: false, autoplay: false, showlrc: false, music: { title: "青春有你", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92%20Ariel%20Tsai-%E9%9D%92%E6%98%A5%E6%9C%89%E4%BD%A0.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 蔡佩軒Ariel -學貓叫.mp3 var ap = new APlayer({ element: document.getElementById("aplayer-VlghKvcw"), narrow: false, autoplay: false, showlrc: false, music: { title: "学猫叫", author: "蔡佩轩", url: "http://music.varygod.top/%E8%94%A1%E4%BD%A9%E8%BB%92Ariel%20-%E5%AD%B8%E8%B2%93%E5%8F%AB.mp3", pic: "", lrc: "" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>歌单</category>
      </categories>
      <tags>
        <tag>蔡佩轩</tag>
        <tag>Ariel Tsai</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学上网教程之搬瓦工]]></title>
    <url>%2F2018%2F10%2F21%2F%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B%E4%B9%8B%E6%90%AC%E7%93%A6%E5%B7%A5%2F</url>
    <content type="text"><![CDATA[前言 搬瓦工（bandwagonhost）是美国知名主机提供商 IT7 旗下的产品，在 VPS 界也可以说是家喻户晓了。价格实惠、质量稳定，一个月二三十软妹币，可以说是科学上网和稳定建站的首选之一。本篇就详细介绍下如何使用 搬瓦工 VPS 快速搭建 Shadowsocks （SS），搭建ss 科学上网。小白向教程，图文结合，让不太懂的朋友也可以快速 搭建ss 流畅访问 Google、YouTube、Instagram、Twitter 等。 本教程适用于：▲ITer、科技、极客等爱折腾人士▲学生、科研人员等学术需求人士▲Steam 等平台的海外吃鸡人士▲有海外业务的中小型博客、企业 搬瓦工最新官网：入口地址传送门录入时间：2018年10月20日18:57:31很不幸的是，搬瓦工的bwh1.net已经打不开了，这次并不是CDN的问题了，而是被和谐了，被解析到了不同的IP，不过官方已经很快的做出了响应，有了最新的地址，请大家记住最新的搬瓦工地址请大家关注我的知乎，有什么问题可以直接问我 准备工作 本文会从 搬瓦工 VPS 的注册购买，到安装完成后的测试使用等，每一步都详细配图说明，让完全不懂的小白也可以顺利搭建完成。复制代码和填写信息时注意核对，大概需要 30 分钟。需要使用的资料： 注册：邮箱（建议用网易邮箱163） 付款方式：支付宝/Paypal/信用卡等 1. 搬瓦工 VPS 购买注意： 不要挂代理！否则会被判为欺骗；直接点击文中购买链接，在购买过程中进行注册；（搬瓦工的验证码被墙，购买时注册不需要填验证码）注册时地址填中国；如果点击购买链接进入页面显示 “Out of Stock” 即为售空，可选择更高一级或其它套餐。 1.1 选择套餐首推 CN2 GT 直连套餐，目前性价比最高，效果不错；追求质量的选择 CN2 GIA，价格比 GT 多些，但效果更好；效果最好的是香港套餐，双程 PCCW，价格略贵；普通 KVM 套餐效果一般，适合一般需求、稳定建站跑服务等。 优惠码：BWH26FXH3HIQ，付款时使用可优惠 6.25% 。（重要！） &gt;ps:后面专门讲如何获取搬瓦工网站上隐藏的优惠码 线路质量：香港 KVM &gt; CN2 GIA &gt; CN2 GT &gt; 普通 KVM选择建议：在预算范围内尽量选择质量最高的，免得买完不满意再折腾。优先选择 CN2 GT 和 GIA 套餐。为方便大家选择，下面列出了搬瓦工目前推荐高性价比套餐和简介。 推荐套餐新人必选方案 ：经济年付，学生白领人士必备 方案一：[抢购]CN2 19刀特价促销款 购买入口硬盘：10GB SSD RAID-10内存：512 MBCPU：Intel Xeon * 1流量：500GB/月 (普通流量)机房：8机房,建议选USCA_2迁移：可迁移到CN2机房月付：无 (仅支持年付)半年付：无 (仅支持年付)年付：$19.99/年（约132元) 方案二：[标准]CN2 29刀特价入门款 购买入口硬盘：10GB SSD RAID-10内存：512 MBCPU：Intel Xeon 1流量：500 GB/月 (CN2流量)机房：默认洛杉矶CN2 可换至8机房迁移：8机房任选，流量不变月付：无 (仅支持年付)半年付：无 (仅支持年付)年付：$29.99/年（约190元)方案三：[高配]CN2 标准配置款 20G 购买入口硬盘：20GB SSD RAID-10内存：1024 MBCPU：Intel Xeon 1流量：1000GB/月 (CN2流量)机房：默认洛杉矶CN2 可换至8机房迁移：8机房任选，流量不变月付：现已取消月付半年付：$29.99/年（约190元)年付：$49.99/年（约320元) （注意：年付会优惠大概两个月的金额；部分套餐可能会缺货；或太火了取消了月付方案，只有年付/季付） 高端精选方案 ： 高速稳定，外贸营销人士必选方案一：[新品]CN2 GIA企业级 20G 购买入口硬盘：20GB SSD RAID-10内存：1024 MBCPU：Intel Xeon 2流量：1000GB/月 (高端GIA流量)机房：洛杉矶GIA高端机房迁移：不可迁移季付：$19.99/季半年付：$39.99/半年年付：$69.99/年企业级中美直连通道 助力外贸企业方案二：[香港]香港直连极速方案 40G 购买入口硬盘：40GB SSD RAID-10内存：2048 MBCPU：Intel Xeon 1流量：200 GB/月 (高端香港流量)机房：香港MCX10机房迁移：不可迁移月付：$19.99/月半年付：$109.99/半年年付：$199.99/年香港直连VPS Ping值仅40毫秒！方案三：[香港]香港直连极速方案 80G 购买入口硬盘：80GB SSD RAID-10内存：4096 MBCPU：Intel Xeon * 1流量：300 GB/月 (高端香港流量)机房：香港MCX10机房迁移：不可迁移月付：$39.99/月半年付：$219.99/半年年付：399.99/年8机房随时迁移 1TB精品CN2流量 1.2 购买图文教程进入购买页面后，您需要核对方案配置以及选择时间期限。以年付$49.99的CN2机房为例，这里强烈建议选购年付方案(Annually)。 第一，价格实惠，相当于买10个月送两个月; 第二，年付IP较为稳定，而月付IP因流动性大，被X概率也大大增高。 下图在比较重要的信息后面都标注了中文注释，我们选择Annually 注意，如果点进去的支付方案显示out of stock，说明该种方案的VPS暂时缺货。请选择其他方案的VPS。 点击Add to Cart(添加到购物车)后，进入订单确认页面。这里可以输入优惠码得到优惠。如下图所示： 搬瓦工的优惠码都是终身的优惠码，可以看到续费也是同价。核对我们选择的方案和价格，没有问题后点击Checkout结账。 如果我们有过账户，直接点击Click here to login登陆以及付款就可以，如果还没有账户则需要注册账户。 PS：这里建议大家购买VPS的时候注册账户，因为直接注册账户的话，搬瓦工调用的是谷歌的验证码，国内是打不开的。 注意：我们不能用代理IP登陆注册账户，注册时国家需要真实(与网络环境的IP一致，中国IP必须填China)，否则会被显示为Fraud(欺诈)。 如果选择支付宝(Alipay)付款的话，便会进入到这一步。 之后点击”Pay Now“，就会弹出支付宝支付窗口，进行支付即可。 支付成功后，便会得到以下的界面，其中VPS的SSH端口和root密码也会发送到您填写的邮箱中。点击Click here to go to your Client Area，进入管理页面。 若没在登录状态，进入官网，右上角点击”Client Area“进行登录。依次点击”Service”-&gt;”My Service”就可以进入到已购买的VPS列表页。 登陆搬瓦工账户后台，就可以看到已经成功买到的VPS主机，我们可以点击KiwiVM Control Panel登录管理面板进行VPS的管理和使用。 分割线 如何在购买搬瓦工VPS的网页中获取优惠码 首先进入到购物车页面，并在空白处点鼠标右键，查看网页源码 然后，在源码中按下Ctrl+F ， 查找关键字：promo code 就可以看到最新可以使用的优惠码了。 得到优惠码后就可以在结算的剩下最高6%的折扣。 2 安装VPS详细步骤 点击KiwiVM Control Panel登录管理面板，进行VPS的管理和使用。 跳转到控制面板页面，我们先来熟悉一下这里展示的服务器信息。如下图： 服务器的准备工作安装CentOS系统 如果您的系统不是64位的CentOS 6，请按照下面的方法进行重新安装系统。其他系统安装shadowsocks的方法，恕不赘述。 关闭VPS点击控制面板左侧的【Main controls】按钮，然后在右侧区域点击【Actions】行【Stop】按钮。如下图： 如果停止VPS成功了之后，会看到下图的界面： 重装OS点击控制面板页面的左侧区域【Install new OS】按钮，然后在右侧区域中选择【centos-6-x86_64】，勾选下方【 I agree that all existing data on my VPS will be lost.】前面的选择框，然后点击【Reload】按钮开始重置系统。如下图： 如果点完按钮之后，出现如下图的界面： 这是因为VPS没有停止。请执行上一步，关闭VPS。如果出现下图所示，说明重装系统已经完成。 上面框里面由数字和字母组成的字符串，&gt;是VPS上root用户的密码，我们要记下来，使用SSH的方式连接VPS时需要使用。&gt;如果没记住也没有关系，我们后面会讲如何重置密码。下面框里面的数字，是端口号，连接VPS时也是需要用到的。不过，这个后期可以随时查，不用记。 修改VPS的root账户密码【方法一】如果root密码没有记住，先使用下面的方法重置密码。如果您知道密码，可以跳过重置密码这一步，直接连接VPS修改密码。 1、重置VPS密码点击控制面板左侧的【Root password modification】修改root账户密码按钮，再在右侧的区域点击【Generate and set new root password】按钮，生成和设置新的root密码，记录下root密码。如下图： 2、修改VPS密码使用ssh工具登录服务器，输入VPS的IP地址、端口号、用户名和密码。具体登录方法不在本次讲解的范围内，恕不赘述。 然后输入shell命令 1passwd 输入新的root密码，修改成功。如下图： 【方法二】 点击控制面板左侧的【Root shell - interactive】按钮，再点击右侧区域的【Launch】按钮，浏览器会再弹出一个网页。在新的网页中输入shell命令passwd，点击回车键。如下图： 输入您要设置的新密码，这时输入密码的同时屏幕上不会显示你的输入。输入完成后，点击回车。如下图： 然后再输入一遍新密码，点击回车。修改密码成功，如下图： 3.安装Shadowsock(SS) 由于之前搬瓦工曾经取消了一键安装Shadowsocks的按钮(部分现已恢复），我们特意给出了三种安装Shadowsocks的方法。方法一和方法二（没有一键安装SS按钮也可以）就是搬瓦工后台一键安装Shadowsocks的方法，更适合小白适用，简单快捷。方法三是采用SSH，用脚本方式安装Shadowsocks，更适合进阶用户使用，或者搬瓦工抽风取消一键安装的时候。还在犹豫什么？选择自己适用的方式，开始吧 方法一：使用SSH工具安装SSWindows 推荐 xshell，Mac 可使用自带的终端。Xshell 百度云网盘链接提取码: 78s8Windows安装 xshell，打开软件。点击 “文件” → “新建” → “连接”，输入 “名称” 和 “主机” （即 VPS IP）和 “端口号”。 点击 “用户身份验证”，输入用户名（默认root）和密码。确认 连接 VPS，接受并保存密匙。 出现 root@vultr:~# 即连接成功。 Mac打开终端，输入以下代码登录 VPS，其中 root 即用户名，将 ip 和端口号更改为 VPS 的 IP 和端口，回车。ssh -p 端口号 root@ip输入 yes 确认，粘贴密码，回车。需要提醒的是，密码输入时并不会显示出来，直接复制粘贴，回车即可。出现 root@vultr:~# 即连接成功。 开始安装ShadowSock(SS)搬瓦工安装完成后默认系统为 Centos 6 x86 bbr，自带谷歌 BBR 加速优化，不用再额外安装。我们可以直接开始安装SS。 首先更新并安装wget工具1yum install update ShadowsocksR一键部署管理脚本： 12yum -y install wgetwget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh 备用脚本： 12yum -y install wgetwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh 复制上面的代码到VPS服务器里，按回车键，脚本会自动安装，以后只需要运行这个快捷命令就可以出现下图的界面进行设置，快捷管理命令为：bash ssr.sh 如上图出现管理界面后，输入数字1来安装SSR服务端。如果输入1后不能进入下一步，那么请退出xshell，重新连接vps服务器，然后输入快捷管理命令bash ssr.sh 再尝试。 根据上图提示，依次输入自己想设置的端口和密码 (密码建议用复杂点的字母组合，端口号为40-65535之间的数字)，回车键用于确认 注：关于端口的设置，总的网络总端口有6万多个，理论上可以任意设置。但是有的地区需要设置特殊的端口才有效，一些特殊的端口比如80、143、443、1433、3306、3389、8080。 如上图，选择想设置的加密方式，比如10，按回车键确认然后需要几分钟的安装过程，请耐心等待出现下面的画面！ 请立即copy下来加以保存。 上面的命令全部回车执行后，如果没有报错，即为执行成功，出现确认提示的时候，输入 y 后，回车即可。安装完成后，脚本提示如下： Congratulations, Shadowsocks-Python server install completed!Your Server IP : IP地址Your Server Port : 端口Your Password : 密码Your Encryption Method: aes-256-cfbYour QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)ss://YWVzLTsadsa206YnVkZHkyMDA4QDEwNC4yMjQuMTM1Ldfghdfgk=Your QR Code has been saved as a PNG file path:/root/shadowsocks_python_qr.pngWelcome to visit: https://teddysun.com/486.htmlEnjoy it! 记录保存好你的上述信息：Server IP、Server Port、Password、Encryption Method这时你的专属ss已经搭好了，开始使用吧。 方法二：搬瓦工后台自带的SS（推荐）1、进入管理后台，点击进入控制面板 2、找到左侧的Shadowsocks server，出现如下画面，点击安装 3、安装很快，基本不到1分钟就可以完成，出现如下画面，点击返回 4、好了，就可以看到自己的SS信息了。如果想修改，还可以点后面的按钮修改。 以上设置完毕，可以直接跳到第三步，设置SS客户端。 方法三：直接输入网址的一键SS，类似方法二1、如果后台没有一键SS按钮，我们只需要登陆到搬瓦工后台，然后在浏览器输入如下链接，并回车： https://kiwivm.64clouds.com/preloader.php?load=/main-exec.php?mode=extras_shadowsocks 然后就可以看到SS安装界面了，如下图 2、点击安装就可以了。安装很快，基本不到1分钟就可以完成，出现如下画面，点击返回 3、好了，就可以看到自己的SS信息了。如果想修改，还可以点后面的按钮修改。 4. 安装SSR客户端1、iphone下载wingy（免费的），app store里搜wingy（中国app store已经下架，可以换到美国账户下载）wingy下载或者用电脑端安装PP助手，然后用PP助手全安装shadowsock客户端 2、windows下载 3、安卓客户端下载 4、Ubuntu客户端安装教程 5、MAC客户端下载 如果你打不开上面几个下载链接说明，github被墙了，可以前往备用入口 备用入口 1、iphone安装shadowsock客户端下载 或者用电脑端安装PP助手，然后用PP助手全安装shadowsock客户端 2、windows下载 3、安卓客户端下载 4、Ubuntu客户端下载Ubuntu客户端安装教程 5、MAC客户端下载 1、windows客户端配置 右键任务栏托盘小飞机图标，“启动”，选择合适的代理模式： PAC：只代理国外网站，建议；全局：所有网站都通过代理。 手机和其它平台与电脑类似，填入对应连接信息，启用即可。不懂的选项保持默认。 2、ios客户端配置 3、MAC客户端 5.效果测试打开Google 打开instagram 打开YouTube 1080P 无卡顿 打开Twitter 结束至此，搬瓦工的ss搭建工作以及客户端配置已经完成。]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>翻墙</tag>
        <tag>扶梯子</tag>
        <tag>VPS</tag>
        <tag>Shadowsock</tag>
        <tag>ss</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vsftpd服务器的移植]]></title>
    <url>%2F2018%2F07%2F15%2Fvsftpd%2F</url>
    <content type="text"><![CDATA[一、简介 vsftpd即very secure FTP daemon（非常安全的FTP进程），是一个基于GPL发布的类UNIX类操作系统上运行的服务器的名字（是一种守护进程），可以运行在诸如Linux、BSD、Solaris、HP-UX以及Irix等系统上面。vsftpd支持很多其他传统的FTP服务器不支持的良好特性。使用 vsftpd 可以在 Linux/Unix 系统上搭建一个安全、高性能、稳定性好的轻量级FTP服务器。 二、准备工作 vsftpd源码包 vsftpd-3.0.2.tar.gz 下载入口 arm-linux-gcc 交叉工具编译链 下载入口 linux平台（Ubuntu 12.04 32bit） 1PS:本人所使用的是arm-2009q1-203-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 三、编译vsftpd源码1、解压 12# tar -xvf vsftpd-3.0.2.tar.gz -C /home/zhangxu/# cd /home/vsptfd-3.0.2 2、配置环境变量 1#export PATH = $PATH:/home/zhangxu/software/arm-2009q1/bin 3、修改Makefile和vsf_findlibs.sh 12345#vi Makefile CC = /home/myvpc/software/arm-2009q1/bin/arm-none-linux-gnueabi-gcc LIBS = &apos;./vsf_findlibs.sh&apos; - lcrypt (参数- lcrypt ，否则编译提示找不到crypt) #vi vsf_findlibs.sh 注释掉49-59行 4、编译 1# make #编译，如果电脑是多核CPU，如四核，使用make -j4可提高编译速度 编译完成后，当前目录下会生成两个文件：vsftpd 和 vsftpd.conf，这两个文件是我们要用的。 四、复制vsftpd 和vsftpd.conf文件到目标板将生成的 vsftpd 复制到目标板 /usr/sbin 目录，vsftpd.conf 复制到目标板 /etc 目录，并修改vsftpd 为可执行，从PC上传到目标板方式任选，可以用tftp或者挂载的方式均可 1#chmod +x vsftpd 五、目标板FTP服务 配置使用 vi 打开 vsftpd.conf 文件，并进行配置，如下配置可实现正常上传下载功能： 12345678anonymous_enable=NO # 默认的 YES 改为 NOlocal_enable=YES # 删除前面的#号注释符号write_enable=YES # 删除前面的#号注释符号anon_upload_enable=NO # 删除前面的#号注释符号，并将 YES 改为 NOanon_mkdir_write_enable=NO # 删除前面的#号注释符号，并将 YES 改为 NOanon_other_write_enable=NO # 删除前面的#号注释符号，并将 YES 改为 NO（这一项新版本中可能没有） chroot_local_user=YES # 删除前面的#号注释符号，改行表示把FTP用户都限制在根目录中allow_writeable_chroot=YES # 添加本行到文件最后 再在目标版上使用命令行配置： 12# adduser nobody # vsftpd默认配置需要# mkdir /usr/share/empty # vsftpd默认配置需要 创建一个本地用户，并设置密码： 12345# adduser ftpadminChanging password for ftpadminNew password: Retype password: Password for ftpadmin changed by root 六、开启vsftpd服务配置完之后，在目标板上打开vsftpd，命令： 1# vsftpd &amp; #注意，后面还有一个&amp; 如果要让 vsftpd 开机启动，可以将该命令添加到 /etc/profile 或者 rc.local 文件最后。 七、 客户端测试]]></content>
      <categories>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>vsftpd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的小窝]]></title>
    <url>%2F2018%2F07%2F15%2F%E6%88%91%E7%9A%84%E5%B0%8F%E7%AA%9D%2F</url>
    <content type="text"><![CDATA[今日入驻github 2018年10月29日00:55:41 修改了主题新的配置文件]]></content>
  </entry>
</search>
